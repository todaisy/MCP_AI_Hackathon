import asyncio
from yandex_neural_api.client import YandexNeuralAPIClient
import datetime
from config_beforeOS import TOKEN, FOLDER

token = TOKEN
folder = FOLDER
client = YandexNeuralAPIClient(token, folder)

async def generate(txt: str , time = datetime.datetime.now()):
    is_diolog = int(await client.generate_text_async(f"""Определи - является ли следующий текст(выделенный <>) диалогом <{txt}>, если является, то верни 1, иначе - 0."""))
    if is_diolog:
        gen_txt = await client.generate_text_async(f'''
        Дан следующий текст: "{txt}".
        Твоя задача: По смыслу определить обсуждаемые в нем темы и вопросы,
        Придумать заголовки для всех обсуждаемых тем и вопросов, 
        и в качестве ответа вернуть краткий пересказ диалога в формате:
        1.Заголовок обсуждения(важно - он не должен содержать слова "Тема","Заголовок" и т.п.) - просто напиши заголовок и все. 2.Краткий персказ обсуждения этой темы, без потери смысла.
        3.Итог обсуждения, (если прийти к конкретному итогу не удалось - то напиши, из-за чего)
        Повтори 1, 2 и 3-тий пункт для каждой найденой темы. После напиши краткий итог диалога(если прийти к конкретному итогу не удалось - то напиши, из-за чего).(Важно, что если текст - не на русском языке, то ответ так же должен быть на английском, слов на русском быть не должно)
        ''')
        gen_date = await client.generate_text_async(f'''
        Если в тексте: "{txt}" обсуждались какие-либо даты (назывались конкретные числа в которые должны произойти те, или иные события(возможно без информации о месяце или годе происходящего)), то напиши их в формате JSON файла
        со следующими полями: {"{all_dates :{name: , date: },{name: , date: }...}"}. В поле name 
        должно содержаться название мероприятия планируемого в эту дату(если оно не называлось прямо - придумай такое, которое максимально точно опиывает обсуждаемое событие)
        а в поле date - дата в формате YYYY-MM-DD(без каких либо слов, или специальных символов - так как выглядят данные формата date-time в json) (если год или месяц не обсуждались, то брать из {time}). Если для одного и того же события выбирались разные даты, то добавь в json запись для каждого вырианта.
        (Важно, что если большая часть слов в тексте - не на русском языке, то названия всех событий должны быть на английском языке, на русском слов быть не должно, иначе - все названия должны быть на русском) 
        Иначе, если даты в тексте не обсуждались - верни {'{all_dates :{}}'}''')
    else:
        gen_txt = 'Извините, из приведенных данных нельзя вынеси ничего полезного:('
        gen_date = '{all_dates :{}}'
    return str(gen_txt).replace(r'\n', '\n').replace('*', ''), str(gen_date).replace(r'\n', '\n').replace("```", "")

